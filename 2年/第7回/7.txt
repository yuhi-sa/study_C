プログラミング演習２レポート課題（第7回）
B162392 佐伯 雄飛

課題１
（プログラム）
     1	#include<stdio.h>
     2	#include<math.h>
     3	
     4	double f(double x){
     5	double y= tan(x)*tan(x);
     6	return y;
     7	}
     8	
     9	int main(){
    10	int n, i;
    11	double a, b, S, x0, x1;
    12	a = 0;
    13	b = 1;
    14	n = 10;
    15	S =0;
    16	
    17	x0 = a;
    18	x1 = (b-a)/n;
    19	
    20	for(i=0;i<=n-1;i++){
    21	  x1 = x0 + (b-a)/n;
    22	  S += (b-a)/n*((f(x0)+f(x1))/2);
    23	  x0 = x1;
    24	  x1 += (b-a)/n;
    25	  }
    26	  
    27	 printf("S = %lf\n",S);
    28	 
    29	 return 0;
    30	 
    31	} 
   
（説明)
これは数値積分の問題である
4から7行目で積分する関数を計算
20行目から24行目までで積分区間を10等分した範囲の台形面積をもとめ、
それを足し合わせることにより積分をしている
（実行結果）
b162392@imc2e-022:/fs/home/b162392$ ./a.out
S = 0.566245

課題２
（プログラム）
     1	#include<stdio.h>
     2	#include<math.h>
     3	
     4	double f(double x){
     5	double y= tan(x)*tan(x);
     6	return y;
     7	}
     8	
     9	int main(){
    10	int n, i;
    11	double a, b, S, x0, x1;
    12	a = 0;
    13	b = 1;
    14	n = 1000;
    15	S =0;
    16	
    17	x0 = a;
    18	x1 = (b-a)/n;
    19	
    20	for(i=0;i<=n-1;i++){
    21	  x1 = x0 + (b-a)/n;
    22	  S += (b-a)/n*((f(x0)+f(x1))/2);
    23	  x0 = x1;
    24	  x1 += (b-a)/n;
    25	  }
    26	  
    27	 printf("S = %lf\n",S);
    28	 
    29	 return 0;
    30	 
    31	} 
（説明）
これは数値積分の問題である
4から7行目で積分する関数を計算
20行目から24行目までで積分区間を1000等分した範囲の台形面積をもとめ、
それを足し合わせることにより積分をしている
(実行結果)
b162392@imc2e-022:/fs/home/b162392$ ./a.out
S = 0.557409

課題３
（プログラム）
     1	#include<stdio.h>
     2	#include<stdlib.h>
     3	#include<math.h>
     4	
     5	#define MAX 100
     6	#define EPS 1.0e-5
     7	
     8	float f(float x){
     9	double a = sin(x+10);
    10	double b = cos(x-20);
    11	  return a*b + 2*(x-0.05)*(x-0.05)*(x-0.05) - 1.75*x;
    12	}
    13	
    14	float df(float x){
    15	double x0, h, L;
    16	h = 0.001;
    17	L =(f(x+h) - f(x))/h;
    18	return L; 
    19	  }
    20	  
    21	int main(){
    22	  int i = 1;
    23	  float x, new_x;
    24	  scanf("%f",&x);
    25	 
    26	  while(1){
    27	    new_x = x - f(x)/df(x);
    28	    printf("%d:x=%.10f, new_x=%.10f\n" , i++, x, new_x);
    29	    if(fabsf(new_x-x) < EPS) break;
    30	    if(i > MAX){
    31	      printf("not converged\n");
    32	      exit(1);
    33	      }
    34	      x = new_x;
    35	      }
    36	      printf("x = %.10f\n", new_x);
    37	      return 0;
    38	   }


（説明）
８から１２行目で与えられた関数を計算
１４から19行目で数値微分を使って与えられた関数を定義にしたがって微分した値を計算する
２４から２５行目で標準入力から初期値をxに与える
２８から３３行目で初期値ー関数/微分した関数を繰り返すことにより解を求める
（実行結果）
b162392@libw31-050:/fs/home/b162392$ ./a.out
2.5
1:x=2.5000000000, new_x=1.7759878635
2:x=1.7759878635, new_x=1.3905426264
3:x=1.3905426264, new_x=1.2360955477
4:x=1.2360955477, new_x=1.2066884041
5:x=1.2066884041, new_x=1.2055929899
6:x=1.2055929899, new_x=1.2055901289
x = 1.2055901289

課題４
（プログラミング）
３と同じ
（説明）
課題３より一つの解は1.2
グラフより近い値を課題3のプログラムに入れて確認する
b162392@libw31-050:/fs/home/b162392$ ./a.out
0.1
1:x=0.1000000015, new_x=-0.0821527317
2:x=-0.0821527317, new_x=-0.0896543935
3:x=-0.0896543935, new_x=-0.0896944404
4:x=-0.0896944404, new_x=-0.0896944627
x = -0.0896944627
b162392@libw31-050:/fs/home/b162392$ ./a.out
-1
1:x=-1.0000000000, new_x=-0.8612779379
2:x=-0.8612779379, new_x=-0.8287180066
3:x=-0.8287180066, new_x=-0.8269047737
4:x=-0.8269047737, new_x=-0.8269022107
x = -0.8269022107

以上より３つの解は1.2、-0.09、-0.8




